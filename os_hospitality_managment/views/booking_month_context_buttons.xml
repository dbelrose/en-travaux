<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <!-- Action serveur pour générer les factures clients depuis la vue liste -->
    <record id="action_generate_customer_invoices_from_list" model="ir.actions.server">
        <field name="name">Générer factures clients</field>
        <field name="model_id" ref="model_booking_month"/>
        <field name="binding_model_id" ref="model_booking_month"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
        <field name="code">
success_count = 0
error_count = 0
already_generated_count = 0

for record in records:
    if record.customer_invoices_generated:
        already_generated_count += 1
        continue
        
    if record.total_revenue == 0:
        continue
        
    try:
        record.action_generate_customer_invoices()
        success_count += 1
    except Exception as e:
        error_count += 1
        
message_parts = []
if success_count > 0:
    message_parts.append(f"{success_count} lots de factures générées")
if already_generated_count > 0:
    message_parts.append(f"{already_generated_count} déjà générées")
if error_count > 0:
    message_parts.append(f"{error_count} erreurs")

message = ", ".join(message_parts) if message_parts else "Aucune facture à générer"
env.user.notify_success(message=message)
        </field>
    </record>

    <!-- Action pour ouvrir le wizard de configuration depuis un mois -->
    <record id="action_configure_customer_invoices_from_month" model="ir.actions.act_window">
        <field name="name">Configurer factures clients</field>
        <field name="res_model">customer.invoice.config.wizard</field>
        <field name="view_mode">form</field>
        <field name="target">new</field>
        <field name="view_id" ref="view_customer_invoice_config_wizard_form"/>
        <field name="context">{'default_booking_month_id': active_id}</field>
        <field name="binding_model_id" ref="model_booking_month"/>
        <field name="binding_view_types">form</field>
    </record>

    <!-- Action pour regénérer les factures clients (avec confirmation) -->
<!--    <record id="action_regenerate_customer_invoices" model="ir.actions.server">-->
<!--        <field name="name">Regénérer factures clients</field>-->
<!--        <field name="model_id" ref="model_booking_month"/>-->
<!--        <field name="binding_model_id" ref="model_booking_month"/>-->
<!--        <field name="binding_view_types">list,form</field>-->
<!--        <field name="state">code</field>-->
<!--        <field name="code">-->
<!--# Cette action nécessite une confirmation utilisateur-->
<!--for record in records:-->
<!--    if record.customer_invoices_generated:-->
<!--        # Marquer comme non généré pour permettre la regénération-->
<!--        record.customer_invoices_generated = False-->
<!--        -->
<!--        # Optionnel : supprimer les anciennes factures en brouillon-->
<!--        draft_invoices = record.customer_invoice_ids.filtered(lambda inv: inv.state == 'draft')-->
<!--        if draft_invoices:-->
<!--            draft_invoices.unlink()-->

<!--env.user.notify_success(message=f"Réinitialisation effectuée pour {len(records)} mois. Vous pouvez maintenant regénérer les factures.")-->
<!--        </field>-->
<!--    </record>-->

    <!-- Menu d'actions rapides -->
    <record id="menu_quick_actions" model="ir.ui.menu">
        <field name="name">Actions rapides</field>
        <field name="parent_id" ref="menu_hospitality_root"/>
        <field name="sequence">95</field>
    </record>

    <!-- Action pour voir tous les brouillons de factures clients -->
    <record id="action_draft_customer_invoices" model="ir.actions.act_window">
        <field name="name">Factures clients en brouillon</field>
        <field name="res_model">account.move</field>
        <field name="view_mode">tree,form</field>
        <field name="domain">[
            ('move_type', '=', 'out_invoice'),
            ('booking_month_id', '!=', False),
            ('state', '=', 'draft')
        ]</field>
        <field name="context">{
            'default_move_type': 'out_invoice'
        }</field>
    </record>

    <menuitem id="menu_draft_customer_invoices"
              name="Factures clients brouillon"
              parent="menu_quick_actions"
              action="action_draft_customer_invoices"
              sequence="10"/>

    <!-- Action pour valider toutes les factures en brouillon -->
    <record id="action_validate_all_draft_invoices" model="ir.actions.server">
        <field name="name">Valider toutes les factures en brouillon</field>
        <field name="model_id" ref="account.model_account_move"/>
        <field name="binding_model_id" ref="account.model_account_move"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
        <field name="code">
validated_count = 0
error_count = 0

draft_invoices = records.filtered(lambda inv: inv.state == 'draft' and inv.booking_month_id)

for invoice in draft_invoices:
    try:
        invoice.action_post()
        validated_count += 1
    except Exception as e:
        error_count += 1

message = f"{validated_count} factures validées"
if error_count > 0:
    message += f", {error_count} erreurs"
    
env.user.notify_success(message=message)
        </field>
    </record>

    <!-- Mise à jour des vues existantes pour ajouter les nouveaux boutons -->
    <record id="view_booking_month_form_quick_actions" model="ir.ui.view">
        <field name="name">booking.month.form.quick.actions</field>
        <field name="model">booking.month</field>
        <field name="inherit_id" ref="view_booking_month_form_customer_invoices"/>
        <field name="arch" type="xml">
            <!-- Ajout d'un bouton de configuration avancée -->
            <button name="action_view_customer_invoices" position="after">
                <button name="%(action_configure_customer_invoices_from_month)d"
                        string="Configurer"
                        type="action"
                        class="btn-secondary"
                        invisible="customer_invoices_generated"/>
            </button>
        </field>
    </record>

</odoo>